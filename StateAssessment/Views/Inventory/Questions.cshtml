@using StateAssessment.Common
@model StateAssessment.Models.ViewModels.InventoryAssessment

@{
    ViewData["Title"] = (Model.Inventory.SectionName + ": " + Model.Inventory.InventoryName);
    ViewData["ClearBodyClass"] = true;
}

<div id="back-sec" class="mb-4">
    <div class="container">
        <a href="~/inventory/@Model.Inventory.InventoryId"><img src="~/icons/back.svg"> Go back</a>
        <a href="javascript:void(0)" class="sub-btn" data-bs-toggle="modal" data-bs-target="#submitModal">Submit</a>
    </div>
</div>


<div id="intro-sec" class="sec-list">
    <div class="container">
        <div class="intro-head">
            <h4><b>@Model.Inventory.SectionName:</b> @Model.Inventory.InventoryName</h4>
            <div class="intro-right">
                <button type="button" data-bs-toggle="modal" data-bs-target="#infoModal" class="info-btn">
                    <img src="~/icons/info.svg">@Model.Inventory.Questions.Count Question
                    @if (@Model.Inventory.Questions.Count > 1)
                    {
                        <span>s</span>
                    }
                </button>
                <a href="javascript:void(0)" id="review" class="review">
                    <img src="~/icons/review.svg">Review
                    <div id="rev-drop">
                        <div class="rev-in">
                            <ul class="questions">
                                @foreach (var q in Model.Inventory.Questions)
                                {
                                    <li id="li-@q.QuestionId" class="@(q.AssessmentAnswers.Any()?"active":"") focus">@q.DisplaySequence.ToString("00")</li>
                                }                                
                                @*<li class="active">02</li>*@
                            </ul>
                            <ul class="data">
                                <li class="att">Attempted Questions</li>
                                <li>Unattempted Questions</li>
                            </ul>
                        </div>
                    </div>
                </a>
            </div>
        </div>
    </div>
</div>


<div id="quest-list">
    <div class="container">
        <div class="quest-list-in">
            @*@if (Model.Questions.Any(q => q.QuestionTypeCode.Equals(Constants.QUESTION_TYPE__YesNoUnknown)))
            {*@
                <h6>Questions</h6>
            @*}*@
            <div class="filter-data">
                <p>Show</p>
                <select name="show" id="show" class="form-control">
                    <option value="05">05</option>
                    <option value="10">10</option>
                    <option value="25">25</option>
                    <option value="50">50</option>
                    <option value="All">All</option>
                </select>
                <p>Questions</p>
            </div>
        </div>
        @if (Model.Inventory.Questions.Any(q => q.QuestionTypeCode.Equals(Constants.QUESTION_TYPE__YesNoUnknown)))
        {
            <p class="desc">Choose the answer that best describes you.  Each question requires an answer.</p>
        }
    </div>
</div>


@if (Model.Inventory.Questions.Any(q => q.QuestionTypeCode.Equals(Constants.QUESTION_TYPE__YesNoUnknown)))
{
    <div class="container">
        <table id="quest-table" class="table">
            <thead>
                <tr>
                    <th></th>
                    <th style="width:120px;">Yes</th>
                    <th style="width:120px;">No</th>
                    <th style="width:120px;">Unable to answer</th>
                </tr>
            </thead>
            <tbody>
            @foreach (var q in Model.Inventory.Questions.Where(q => q.QuestionTypeCode.Equals(Constants.QUESTION_TYPE__YesNoUnknown)).OrderBy(q => q.DisplaySequence))
            {   
                <tr class="spacer"></tr>
                <tr>
                    <td>@Html.DisplayFor(modelItem => q.Title)</td>
                    <td><input type="radio" name="quest-@q.QuestionId" class="form-check-input cursor-hand" value="Yes" onchange="javascript:OnRadioButtonChange(this);" @(q.AssessmentAnswers.Any(a => a.AnswerValue.Equals("Yes")) ? "Checked" : "")></td>
                    <td><input type="radio" name="quest-@q.QuestionId" class="form-check-input cursor-hand" value="No" onchange="javascript:OnRadioButtonChange(this);" @(q.AssessmentAnswers.Any(a => a.AnswerValue.Equals("No")) ? "Checked" : "")></td>
                    <td><input type="radio" name="quest-@q.QuestionId" class="form-check-input cursor-hand" value="Unable" onchange="javascript:OnRadioButtonChange(this);" @(q.AssessmentAnswers.Any(a => a.AnswerValue.Equals("Unable")) ? "Checked" : "")></td>
                </tr>
            }
            </tbody>
        </table>
    </div>
}
<div id="quest-list">
    @foreach (var q in Model.Inventory.Questions.Where(q => !q.QuestionTypeCode.Equals(Constants.QUESTION_TYPE__YesNoUnknown)).OrderBy(q => q.DisplaySequence))
    {
        <div class="container mb-5">
            <div class="quest-list-in">
                <h6>Question @q.DisplaySequence</h6>
            </div>
            <p class="desc">@Html.DisplayFor(modelItem => q.Title)</p>
            @if (q.QuestionTypeCode.Equals(Constants.QUESTION_TYPE__Numeric))
            {
                <input name="quest-@q.QuestionId" type="number" class="form-control write" placeholder="Type answer here" onblur="javascript:OnTextboxBlur(this);" value="@q.AssessmentAnswers.FirstOrDefault()?.AnswerValue">
            }
            else if (q.QuestionTypeCode.Equals(Constants.QUESTION_TYPE__Text))
            {
                <input name="quest-@q.QuestionId" type="text" class="form-control write" placeholder="Type answer here" onblur="javascript:OnTextboxBlur(this);" value="@q.AssessmentAnswers.FirstOrDefault()?.AnswerValue">
            }
            else if (q.QuestionTypeCode.Equals(Constants.QUESTION_TYPE__SingleChoice))
            {
                @foreach (var qs in q.QuestionSuggestedAnswers)
                {
                    <div class="d-flex align-items-center">
                        <input type="radio" name="quest-@q.QuestionId" id="selected-answer-@qs.QuestionSuggestedAnswerId" class="c-radio cursor-hand" value="@qs.QuestionSuggestedAnswerId" onchange="javascript:OnRadioButtonChange(this);" @(q.AssessmentAnswers.Any(a => a.SuggestedAnswerId.Equals(qs.QuestionSuggestedAnswerId)) ? "Checked" : "")>
                        <label for="selected-answer-@qs.QuestionSuggestedAnswerId" class="desc cursor-hand">@qs.Title</label>
                    </div>
                }
            }
        </div>
    }
</div>



<div id="bottom-bar">
    <div class="container">
        <p>State Industrial Products</p>
        <a href="list.html" class="cst-btn alternate">Continue<img src="~/icons/right-arrow.svg"></a>
    </div>
</div>



<!-- Modal -->
<div class="modal fade" id="infoModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            <h5 class="modal-title" id="exampleModalLongTitle">Instructions</h5>
            <div class="modal-body">
                @Html.Raw(@Model.Inventory.InventoryDescription)
            </div>
        </div>
    </div>
</div>


<div class="modal fade" id="submitModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            <h5 class="modal-title" id="exampleModalLongTitle">Confirm Submit</h5>
            <div class="modal-body">
                <p>Are you sure you want to submit the assessment? You will not be able to attempt this section again.</p>
                <a href="~/inventory" class="cst-btn">OK</a>
            </div>
        </div>
    </div>
</div>


<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous">
</script>
<script src="https://code.jquery.com/jquery-3.6.1.min.js"
        integrity="sha256-o88AwQnZB+VDvE9tvIXrMQaPlFFSUTR+nldQm1LuPXQ=" crossorigin="anonymous"></script>
<script src="../../js/custom.js"></script>
@*
<div>
    <a asp-action="Edit" asp-route-id="@Model?.InventoryId">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>
*@

@section Scripts {
   <script type="text/javascript">
       function OnRadioButtonChange(radioButton){
            let answer = $('input[name="' + radioButton.name + '"]:checked').val();
            let data = {Answer:answer};
            CaptureAnswer(radioButton, data);
       }

       function OnTextboxBlur(textBox){
            let answer = $(textBox).val();
            let data = {Answer:answer};
            CaptureAnswer(textBox, data);
       }

       function CaptureAnswer(element, data)
       {
            let assessmetnId = @Model.Assessment.AssessmentId;
            let questionId = parseInt(element.name.replace('quest-', ''));
            data.AssessmentId = assessmetnId;
            data.QuestionId = questionId;

            let url = '/Inventory/CaptureAnswer';
            let data2 = JSON.stringify(data);

            $.ajax({
                type: 'POST',
                url: url,
                data: data2,
                contentType: 'application/json',
                success: function (data) {
                    var questionId = data.questionId;
                    $('#li-' + questionId).addClass('active');
                },
                //dataType:'json'
            });
       }
   </script>
}